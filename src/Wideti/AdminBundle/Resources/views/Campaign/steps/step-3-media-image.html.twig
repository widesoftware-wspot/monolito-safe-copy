{% extends 'AdminBundle::layout.html.twig' %}

{% block css %}
    {{ parent() }}
    <link rel="stylesheet" type="text/css" href="{{ asset('bundles/admin/theme/scripts/plugins/forms/bootstrap-fileinput/bootstrap-fileinput.css') }}" />
    <link href="{{ asset('bundles/admin/theme/css/campaign.css') }}" type="text/css" rel="stylesheet" />
    <link href="{{ asset('bundles/admin/theme/scripts/plugins/lightbox/lightbox.css') }}" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.6.2/cropper.css" integrity="sha512-087vysR/jM0N5cp13Vlp+ZF9wx6tKbvJLwPO8Iit6J7R+n7uIMMjg37dEgexOshDmDITHYY5useeSmfD1MYiQA==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.13.2/themes/base/jquery-ui.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">


<style>

    .link-disabled {
        pointer-events: none; /* Impede interações do mouse */
        color: gray; /* Muda a cor do texto para cinza */
        opacity: 0.6; /* Diminui a opacidade */
        cursor: not-allowed; /* Muda o cursor para indicar que não é clicável */
    }

        
    .frame-lateral-esquerdo {
        display: flex;
        flex-direction: column;
        /* align-items: flex-start; Alinha à esquerda, ajuste conforme necessário */
    }

    .form-group {
        margin-bottom: 15px; /* Adiciona espaçamento entre os grupos */
    }

    #add-image-btn-container,
    #add-image-btn-container-desktop {
        align-self: center; /* Mantém o botão alinhado à esquerda */
    }



    #add-image-btn,
    #add-image-btn-desktop {
        background-color: red;
        color: white;
        border: none;
        border-radius: 50%; /* Faz o botão ser redondo */
        /* width: 40px; Largura do botão */
        /* height: 40px; Altura do botão */
        /* font-size: 20px; Tamanho do símbolo "+" */
        /* display: flex; */
        /* justify-content: center; */
        /* align-items: center; */
        cursor: pointer;
    }

    #add-image-btn:hover,
    #add-image-btn-container-desktop:hover {
        background-color: darkred; /* Muda a cor ao passar o mouse */
    }



    .carousel-inner {
        display: flex;
        justify-content: center; /* Centraliza horizontalmente */
        height: 100%; /* Garante que o contêiner use toda a altura disponível */
        overflow: hidden; /* Garante que o conteúdo que ultrapassa os limites seja oculto */
        width: 100%;
        height: 100%; /* Ajusta a altura do carrossel conforme o container */
        /* max-width: 245px; Limita a largura máxima do carrossel */
        max-height: 55vh; /* Limita a altura máxima */
    }

    .carousel-inner img {
        /* max-width: 100%; */
        /* max-height: 100%; */
        object-fit: contain; /* Ajusta a imagem sem distorcer */
        /* width: auto; A larg/;;ura da imagem não deve ser forçada além do necessário */
        height: auto; /* A altura da imagem não deve ser forçada além do necessário */

        width: 100%; /* Faz o carrossel ocupar a largura total do modal */
        max-height: 60vh; /* Limita a altura máxima */
        margin: 0 auto; /* Centraliza o carrossel */
        overflow: hidden; /* Impede que o conteúdo extrapole */
    }


    .preview-container {
            width: 100%; /* Ajuste a largura conforme necessário */
            height: 200px; /* Ajuste a altura conforme necessário */
            display: flex ;
            align-items: center;
            justify-content: center;
            border: 1px solid #ddd;
            overflow: hidden;
            position: relative; /* Garante que a imagem pode ser centralizada dentro do contêiner */
            background-color: #1d1919f0;
            border-radius: 2%;

        }

    .preview-container img {
        max-width: 100%;
        max-height: 100%;
        object-fit: cover; /* Garante que a imagem se ajuste ao contêiner mantendo a proporção */
    }

    #input-group-btn1, #input-group-btn2, #input-group-btn3,
    #input-group-btn1-desktop, #input-group-btn2-desktop, #input-group-btn3-desktop  {
        display: flex;
        justify-content: space-around;
        width: 100%;
    }

    #btn-file1, #btn-file2, #btn-file3,
    #btn-file1-desktop, #btn-file2-desktop, #btn-file3-desktop  {
        display: flex;
        justify-content: center;
        /* width: 100%; */
    }



        

    .espaco-foto i {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    font-size: 3vh;
    /* color: #cccccc; */
    cursor: pointer;
    }

    .espaco-foto {
    width: 100%; /* largura do quadrado */
    height: 200px; /* altura do quadrado */
    background-color: #ccc; /* cor de fundo cinza */
    display: inline-block; /* exibe os quadrados lado a lado */
    margin: 10px; /* margem entre os quadrados */
    border: 1px solid #ddd; /* borda para os quadrados */
    position: relative;
    max-height: 20vh; /* Limita a altura em relação à viewport */


    }

    .espaco-foto img {
    width: 100%; /* largura da imagem */
    height: 100%; /* altura da imagem */
    object-fit: cover; /* ajusta a imagem para cobrir o quadrado */
    }


    #modal-enviar-imagem .modal-content,
    #modal-enviar-imagem-desktop .modal-content  {
    /* display: flex;
    flex-direction: row; */
        
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    /* width: 100%; */
    max-height: 100%; /* Limita a altura máxima dos elementos internos */
    overflow: hidden; /* Impede o conteúdo de exceder os limites */
    flex-grow: 1; /* Faz com que cresçam proporcionalmente */

    }

    #modal-enviar-imagem .frame-lateral-esquerdo,
    #modal-enviar-imagem-desktop .frame-lateral-esquerdo  {
    width: 30%; /* ajuste o valor de acordo com a largura desejada */
    /* margin-right: 20px; */
    /* border: solid 1px red; */
    padding: 2%
    }

    

    .toolbar-buttons .ui-slider {
    margin-top: 10px;
    margin-bottom: 20px;
    }

    .toolbar-buttons .ui-slider .ui-slider-handle{
    width: auto;
    min-width: 1.2em;
    }

    .modal {
        left: 50%;
        transform: translateX(-50%);
        margin-left: 0px;
    }

    /* Ajusta a borda da área de recorte sem alterar o tamanho do conteúdo */
    .cropper-crop-box,
    .cropper-view-box {
        border: 4px solid rgba(255, 255, 255, 0.8);
        box-sizing: border-box; /* Garante que a borda seja incluída nas dimensões totais */
    }
    .cropper-view-box {
        outline: 1px solid rgba(255, 255, 255, 0.8);
    }


    #icon-container-mobile, #icon-container-desktop {
        margin-bottom: 4vh;
        margin-top: 2vh;
    }
    /* Definir cor inicial específica para o ícone mobile */
    #icon-container-mobile #mobileicon {
        color: #000; /* Cor preta para o ícone mobile no início */
        margin-right: 1.5vh;
        cursor: pointer;
    }

    #icon-container-desktop #mobileicon {
        margin-right: 1.5vh;
        cursor:pointer;
    }

    #mobileicon, #desktopicon{
        font-size: 3vh; /* Tamanho do ícone */
        color: #cccccc; /* Cor padrão dos ícones */
        transition: color 0.3s ease; /* Transição suave para a mudança de cor */
        cursor: pointer;
    }

</style>
{% endblock %}

{% block content %}
    {% include 'AdminBundle::header.html.twig' with {'title': 'Campanhas'} %}
    <div class="innerLR">
        {% form_theme form with ['AdminBundle:Form:fields.html.twig', 'AdminBundle:Form:templateForm.html.twig'] %}
        {{ form_start(form, { 'attr': {'class': 'form-horizontal', 'enctype': 'multipart/form-data'} }) }}
        <input type="hidden" id="campaignId" value="{{ campaign.id }}" />
        <input type="hidden" id="step" value="{{ step }}" />
        <input type="hidden" id="exhibitionTime" name="exhibitionTime" value="{{ exhibitionTime }}" />
        <div>
            <div class="widget widget-tabs border-bottom-none" style="height: 70vh;">
                <div class="widget-body">
                    {% set errors = [1] %}
                    {% for error in form.vars.errors %}
                        {% set errors = error.cause %}
                    {% endfor %}

                    <div class="row-fluid">
                        {% if (app.request.get('step') == 'pre-login') %}
                            {% set title = 'Pré Login' %}
                            {% set where = 'ANTES da' %}
                        {% else %}
                            {% set title = 'Pós Login' %}
                            {% set where = 'APÓS' %}
                        {% endif %}

                        <h2>
                            {{ title }}
                        </h2>
                    </div>

                    <div class="row-fluid" style="margin-top: 20px;">
                        <div class="span12">
                            <div class="row-fluid" style="margin-bottom: 0.5em; width: 97.7%;">
                                <div class="span6 time">
                                    <h4 class="heading " style="font-weight: bold;">
                                        Tempo de exibição do banner
                                    </h4>
                                    Exibir por
                                    {{ form_widget(form.exhibitionTime, {
                                        'attr': {
                                            'id': 'exhibitionTime',
                                            'oninput': 'handleExhibitionTimeChange(event)'
                                        }
                                    }) }}
                                    segundos cada banner.
                                    <span style="font-size: 10px;">
                                        (Sugestão: entre 5 e 10 segundos)
                                    </span>
                                    {{ form_errors(form.exhibitionTime) }}
                                </div>

                                <div id="exhibitionTime" class="widget-body hide">
                                    <div class="span6">
                                        <p class="error help-block">
                                            <span class="label label-warning">
                                                O tempo de exibição deve ser maior que 0.
                                            </span>
                                        </p>
                                    </div>
                                </div>
                            </div>
                             <br>

                                <div class="row-fluid">
                                    <div class="span7" id="mobileBannerSection">
                                        {# <div class="widget row-fluid" style="border-radius: 5px; overflow: hidden; border:solid 0.5px "> #}
                                        <div class="widget row-fluid" style="border-radius: 5px; overflow: hidden; border: solid 0.5px; padding-bottom:2vh;  max-width: 100%;">

                                            <div class="widget-head" style="border-bottom: solid  black 0.5px; background:none">
                                            {# <div class="widget-head" style="border-bottom: solid black 0.5px; background: none; text-align: center;"> #}
                                                <h4 class="heading glyphicons iphone">

                                                {# <h4 class="heading glyphicons iphone" style="white-space: nowrap; overflow: hidden; text-overflow: ellipsis; max-width: 100%;"> #}
                                                    <i></i>
                                                    <b>
                                                        Banner Vertical - Formato permitido JPG, JPEG e PNG
                                                    </b>
                                                    <span style="font-size: 0.7em; color: #555">
                                                        Resolução indicada 768x1024px
                                                    </span>
                                                </h4>
                                            </div>
                                            <div class="widget-body" style="padding: 3vh; display: flex; flex-direction: column; align-items: center;">

                                                <div class="span upload" style="display: flex; justify-content: center; align-items: center; height: 100%; flex-direction: column;">

                                                <div class="fileinput fileinput-new" data-provides="fileinput" style="text-align: center;">
                                                        {# <div> #}
                                                            <div id="imageMobileName" class="widget-body hide" style="right: 30vh; ">
                                                                <p>
                                                                    <span id="imageMobileNameText" class="glyphicons"></span>

                                                                </p>

                                                                    <ul id="uploadedImageNames" style="list-style-type: none; padding: 0;">
                                                                        <!-- Lista de nomes de imagens será inserida aqui -->
                                                                    </ul>
                                                            </div>
                                                            
                                                        {# <span class="btn default btn btn-icon btn-primary" id="enviar-carrosel" data-toggle="modal" data-target="#modal-enviar-imagem">
                                                            Enviar Imagens
                                                        </span>

                                                        <div id="modal-enviar-imagem" class="modal fade" tabindex="-1" role="dialog">
                                                            <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
                                                                <div class="modal-content">
                                                                    <div class="frame-lateral-esquerdo">
                                                                        <div class="espaco-foto" id="espaco-foto-1">
                                                                            <img src="" alt="Foto 1">
                                                                            <i class="fas fa-image"></i>
                                                                            <input type="file" id="imageMobile1" name="file" class="fileinput-new" style="display: none;" accept="image/*">

                                                                        </div>
                                                                        <div class="espaco-foto" id="espaco-foto-2">
                                                                            <img src="" alt="Foto 2">
                                                                            <i class="fas fa-image"></i>
                                                                            <input type="file" id="imageMobile2" name="file" style="display: none;" accept="image/*"></span>

                                                                        </div>
                                                                        <div class="espaco-foto" id="espaco-foto-3">
                                                                            <img src="" alt="Foto 3">
                                                                            <i class="fas fa-image"></i>
                                                                            <input type="file" id="imageMobile3" name="file" style="display: none;" accept="image/*"></span>

                                                                        </div>
                                                                    </div>
                                                                    <div class="conteudo-modal">
                                                                        <h1>TESTE CONTEUDO MODAL</h1>

                                                                      


                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div> #}


<!-- Botão para abrir o modal -->
<span class="btn default btn btn-icon btn-primary" id="enviar-carrosel" data-toggle="modal" data-target="#modal-enviar-imagem">
    Enviar Imagens
</span>

<!-- Modal CARROSEL -->
<div id="modal-enviar-imagem" class="modal fade" tabindex="-1" role="dialog" style="max-height: 85%;width:60%; overflow: scroll; display:none;  border-radius: 5px;">
    <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
        <div class="modal-content">

        
            <div class="frame-lateral-esquerdo">
                <!-- Espaco Foto 1 -->
                <div class="form-group">
                
                    <div class="fileupload fileupload-new" data-provides="fileinput">
                        <div class="input-group">
                            <div class="fileinput-new data espaco-foto" style="width: 50%;  height: 20vh;" >
                                    <i class="fas fa-image"></i>
                           </div>
                            <div class="fileinput-exists thumbnail preview-container" id="preview-container1"  style="width: 50%;  height: 20vh; align-content: center;">
                                <!-- O preview será exibido aqui -->
                            </div>
                                <div class="toolbar-cropper toolbar-buttons">
                                
                                    {# <label class="btn  btn-icon btn-primary" style="width:10vh; margin-top:10%"> #}
                                    <div id="zoom-sliderMobile-preview-container1"></div>
                                
                                </div>
                            <div class="input-group-btn " id="input-group-btn1">
                                <a class="btn btn-primary btn-file" id="btn-file1">
                                        <span class="fileupload-new">Selecionar Imagem 1</span>
                                        <span class="fileupload-exists">Alterar</span>
                                        <input type="file" id="imageMobile" name="imageMobile" accept="image/*" data-index-input-mobile="0" />

                                        {# <input type="file" id="imageMobile1" name="file1" accept="image/*"/> #}
                                        {# <input type="file" id="imageMobile" name="file"></span> #}
                                        {# <input type="file" id="imageMobile" name="imageMobile[]" accept="image/*"> #}

                                                    {{ form_widget(form.imageMobile) }}

                                    </a>
                                <a href="javascript:void(0);" class="btn crop-image hide"data-preview="preview-container1" data-input="imageMobile" id="cropper1">Cortar Imagem 1</a>

                                <a href="#" class="btn btn-danger fileupload-exists" data-dismiss="fileupload">Remover</a>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Espaco Foto 2 -->
                <div class="form-group" id="image-upload-2" style="display: none;">
                    <div class="fileupload fileupload-new" data-provides="fileinput">
                        <div class="input-group">
                            <div class="fileinput-new  espaco-foto" style="width: 50%;  height: 20vh;" >
                                    <i class="fas fa-image"></i>
                           </div>
                            <div class="fileinput-exists thumbnail preview-container" id="preview-container2"  style="width: 50%;  height: 20vh; align-content: center;">
   
                            <!-- O preview será exibido aqui -->
                            </div>

                                <div class="toolbar-cropper toolbar-buttons">
                                
                                    <div id="zoom-sliderMobile-preview-container2"></div>
                                
                                </div>
                            <div class="input-group-btn" id="input-group-btn2">
                             <a class="btn btn-primary btn-file" id="btn-file2">
                                    <span class="fileupload-new">Selecionar Imagem 2</span>
                                    <span class="fileupload-exists">Alterar</span>
                                    <input type="file" id="imageMobile2" name="imageMobile2" accept="image/*"data-index-input-mobile="1"  />

                                        {{ form_widget(form.imageMobile2) }}

                                </a>
                                <a href="javascript:void(0);" class="btn  crop-image  hide" data-preview="preview-container2" data-input="imageMobile2" id="cropper2">Cortar Imagem 2</a>
                                <a href="#" class="btn btn-danger fileupload-exists" data-dismiss="fileupload">Remover</a>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Espaco Foto 3 -->
                    <div class="form-group" id="image-upload-3" style="display: none;">
                    <div class="fileupload fileupload-new" data-provides="fileinput">
                        <div class="input-group">
                            <div class="fileinput-new  espaco-foto" style="width: 50%;  height: 20vh;" >
                                    <i class="fas fa-image"></i>
                           </div>
                            <div class="fileinput-exists thumbnail preview-container" id="preview-container3"  style="width: 50%;  height: 20vh; align-content: center;">
                                <!-- O preview será exibido aqui -->
                            </div>
                            <div class="toolbar-cropper toolbar-buttons">
                            
                                <div id="zoom-sliderMobile-preview-container3"></div>
                            
                            </div>


                            <div class="input-group-btn" id="input-group-btn3">
                             <a class="btn btn-primary btn-file" id="btn-file3">
                                    <span class="fileupload-new">Selecionar Imagem 3</span>
                                    <span class="fileupload-exists">Alterar</span>
                                    <input type="file" id="imageMobile3" name="imageMobile3" accept="image/*" data-index-input-mobile="2" />
                                        {{ form_widget(form.imageMobile3) }}

                                </a>
                                <a href="javascript:void(0);" class="btn  crop-image  hide" data-preview="preview-container3" data-input="imageMobile3" id="cropper3">Cortar Imagem 3</a>
                                <a href="#" class="btn btn-danger fileupload-exists" data-dismiss="fileupload">Remover</a>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Botão para adicionar mais imagens -->
                <div class="form-group" id="add-image-btn-container">
                    <button type="button" class="btn " id="add-image-btn">+</button>
                </div>
            </div>

            <div class="conteudo-modal">
                <!-- Conteúdo do modal -->

                <div id="icon-container-mobile">
                        <i id="mobileicon" class="fas fa-mobile-alt"></i> <!-- Ícone de telefone -->
                        <i id="desktopicon" class="fas fa-laptop"></i> <!-- Ícone de laptop -->
                </div>

        <!-- Carrossel para exibir as fotos -->
                <!-- Carrossel para exibir as fotos -->
                <div id="carousel-imagens" class="carousel slide">
                    <!-- Indicadores -->
                    <ol class="carousel-indicators" id="carousel-indicators">
                        <!-- Indicadores serão adicionados dinamicamente -->
                    </ol>

                    <!-- Itens do carrossel     MOBILE-->
                <div style=" height: 60vh; width: 40vw; border:1px solid transparent; height:65vh; max-height:65vh;">
                    <div class="carousel-inner" id="carousel-inner" style="width: 245px; height: 55vh; background-color: #333; border-radius: 30px; padding: 15px; position: relative; overflow: hidden; margin: 0 auto;">
                        <!-- Itens do carrossel serão adicionados dinamicamente -->
                    </div>
                </div>
                    <!-- Controles do carrossel -->
                    <a class="left carousel-control" style="  background: none; color: red; border:none;"  href="#carousel-imagens" data-slide="prev">
                        <span class="fas fa-chevron-left"></span>
                    </a>
                    <a class="right carousel-control" style="  background: none; color: red; border:none;" href="#carousel-imagens" data-slide="next">
                        <span class="fas fa-chevron-right"></span>
                      </a>
                </div>



                <!-- ENVIAR MOBILE-->
                <div style="margin-bottom:10px;">
                        <img src="{{ asset('bundles/admin/theme/images/ajax-loader.gif') }}" alt="" class="loader-post mobile hide" />


                        <button class="btn btn-icon" type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">Cancelar</span>
                        </button>
                        <a href="javascript:void(0);" id="imageMobileSubmit" class="btn btn-icon btn-primary ">
                            <i></i>
                                Enviar
                        </a>
                    {# </div> #}

                </div>
            </div>
        </div>
    </div>
</div>



<!-- Modal CROPPER  -->
<div id="mobileModalCropper" class="modal" style=" display:none; border:none !important; position: fixed; top: 0; width: 90%; height:90%; background: rgba(0, 0, 0, 0.5); ">
    <div class="modal-content" style="background: #fff; border:none !important; padding: 20px; border-radius: 10px; position: relative; width: 650px; max-width: 90%; height:86vh; max-height: 80vh; margin: 4vh auto; overflow:hidden">
        <span class="closeMobile" style="position: absolute; top: 10px; right: 10px; cursor: pointer; font-size: 20px; color: #333;">
            &times;
        </span>
        <h4 style="text-align: center; margin-bottom: 10px;">Cortar Imagem</h4>
        <div id="modalImageContainer" style="display: flex; flex-direction: column; justify-content: center; align-items: center; text-align: center; height:90%; max-height: 90%;">
            <!-- CROPPER -->
            <div id="cropContainer" style="width:55vh;">
                <div class="crop-preview">
                    <div id="previewMobile" style="text-align: center;">
                        <img id="mobilePreviewImage" src="" alt="Preview" style="width:55vh; max-width: 100%; height:60vh; max-height: 60vh; border-radius: 10px; object-fit: contain;">
                    </div>
                </div>
            </div>

                <!-- CONTROLES -->
                <form name="toolbarForm" class="col-md-3">
                    <div class="toolbar-cropper toolbar-buttons" style="width:40%;">
                    
                        <div id="zoom-sliderMobile"></div>
                    
                    </div>
                </form>

                <div style='margin-top:20px;'>
                    
                    <a class="closeMobile btn btn-icon" style="background-color: #f4f4f4; color: ; margin-right: 10px;">Cancelar </a>
                  <a href="javascript:void(0);" class="btn btn-icon btn-primary  crop-image  " id="endCropper"> Iniciar Corte</a>

                </div>
        </div>
    </div>
</div>






<script>

        // Função para desabilitar o link
    function disableLink(linkId) {
        const link = document.querySelector(`a[data-input="${linkId}"]`);
        link.classList.add('link-disabled'); // Adiciona a classe
    }

    // Função para habilitar o link
    function enableLink(linkId) {
        const link = document.querySelector(`a[data-input="${linkId}"]`);
        link.classList.remove('link-disabled'); // Remove a classe
    }


    // Obtenha o modal e o botão de fechar
    const modal = document.getElementById('mobileModalCropper');
    // const closeModalButton = document.querySelector('.closeMobile');

    // Função genérica para abrir o modal
    function openModal() {
        modal.style.display = 'block'; // Exibe o modal
    }

        // Função genérica para abrir o modal
    function closeModal() {
        modal.style.display = 'none'; // Exibe o modal
    }

    // Adiciona o evento de clique a todos os botões com a classe "crop-image"
    document.querySelectorAll('.crop-image').forEach(function(button) {
        button.addEventListener('click', openModal);
    });


        // Adiciona o evento de clique a todos os botões com a classe "crop-image"
    document.querySelectorAll('.closeMobile').forEach(function(button) {
        button.addEventListener('click', closeModal);
    });






document.getElementById('add-image-btn').addEventListener('click', function() {
    // Verifica se o segundo campo de upload está visível
    if (document.getElementById('image-upload-2').style.display === 'none') {
        document.getElementById('image-upload-2').style.display = 'block';
        disableLink('imageMobile');
    } else if (document.getElementById('image-upload-3').style.display === 'none') {
        document.getElementById('image-upload-3').style.display = 'block';
        disableLink('imageMobile2');
        // Esconde o botão "+" depois que o terceiro campo for adicionado
        document.getElementById('add-image-btn-container').style.display = 'none';

    }
});





document.addEventListener('DOMContentLoaded', function () {


   // Função para atualizar o preview da imagem e adicionar ao carrossel
    function updatePreview(inputId, previewContainerId, index) {
        const input = document.getElementById(inputId);
        const indexInputMobile = input.getAttribute('data-index-input-mobile'); 
        const previewContainer = document.getElementById(previewContainerId);
        const carouselInner = document.getElementById('carousel-inner');

        const indicators = document.getElementById('carousel-indicators');
        const cropperImageMobile = document.getElementById('mobilePreviewImage');

        
        input.addEventListener('change', function () {
            // nao entra aqui depois do finalize crop
            const file = input.files[0];
            if (file && file.type.match('image.*')) {

                const reader = new FileReader();
                
                reader.onload = function (e) {
                    const img = document.createElement('img');
                    img.src = e.target.result;
                    img.className = 'img-responsive'; // Adiciona a classe para ajustar a imagem
                    
                    // Atualiza o preview
                    previewContainer.innerHTML = ''; // Limpa o conteúdo existente
                    previewContainer.appendChild(img);

                    img.style.width = '100%';  // Aplica largura de 100%
                    img.style.height = '100%';  // Aplica altura de 100%
                    img.style.borderRadius = '15px';  // Aplica bordas arredondadas
                    img.style.objectFit = 'contain';  // Ajuste da imagem dentro do contêiner
                    // $('#mobilePreviewImage').attr('src', e.target.result;);
                    cropperImageMobile.src= '';
                    cropperImageMobile.src= e.target.result;

                    // Atualiza o carrossel
                    const items = carouselInner.getElementsByClassName('item');

                    const itemCount = items.length;
                    img.setAttribute('data-index-mobile', indexInputMobile); // Adiciona o data-indes pintu como um atributo data
                    $('#cropper' + (itemCount+1)).show()

                    if (index < itemCount) {
                        // Atualiza a imagem existente
                        const existingItem = items[index];
                        existingItem.setAttribute('data-index-mobile', indexInputMobile); 
                        existingItem.innerHTML = ''; // Limpa o conteúdo existente
                        existingItem.appendChild(img.cloneNode(true));

                    } else {
                        // Adiciona uma nova imagem se o índice for maior que o número de itens
                        const newItem = document.createElement('div');
                        newItem.className = 'item';
                        if (itemCount === 0) {
                            newItem.classList.add('active'); // Define o primeiro item como ativo
                        }
                        newItem.setAttribute('data-index-mobile', indexInputMobile); 

                        newItem.appendChild(img.cloneNode(true));
                        carouselInner.appendChild(newItem);


                        // Atualiza os indicadores do carrossel
                        const newIndicator = document.createElement('li');
                        newIndicator.setAttribute('data-target', '#carousel-imagens');
                        newIndicator.setAttribute('data-slide-to', itemCount);
                        if (itemCount === 0) {
                            newIndicator.classList.add('active');
                        }
                        indicators.appendChild(newIndicator);

                    }

                    if (itemCount === 0) {
                        // Se for o primeiro item, inicialize o carrossel
                        $('#carousel-imagens').carousel();
                    } else {
                        // Atualiza o carrossel
                        $('#carousel-imagens').carousel(itemCount - 1); // Navega para o último item adicionado
                    }
                }
                
                reader.readAsDataURL(file);
            } else {
                previewContainer.innerHTML = 'Formato de arquivo não suportado.';
            }
        });
    }

        // Função para navegar para o slide anterior
    $('.left.carousel-control').off('click').on('click', function () {
        $('#carousel-imagens').carousel('prev');
    });

    // Função para navegar para o próximo slide
    $('.right.carousel-control').off('click').on('click', function () {
        $('#carousel-imagens').carousel('next');
    });


    // Controla o item ativo manualmente ao clicar nos controles do carrossel
    // Variável para armazenar o índice atual
    let currentIndex = 0;

    // Função para atualizar manualmente o item ativo do carrossel
    function updateCarousel(currentIndex) {
        const items = document.querySelectorAll('.carousel-inner .item');
        const totalItems = items.length;

        // Remove a classe 'active' de todos os itens
        items.forEach(item => item.classList.remove('active'));

        // Adiciona a classe 'active' ao item correspondente ao índice atual
        if (totalItems > 0) {
            items[currentIndex].classList.add('active');
        }

    }

    // Função para navegar para o slide anterior manualmente
    $('.left.carousel-control').off('click').on('click', function () {
        const totalItems = document.querySelectorAll('.carousel-inner .item').length;

        // Decrementa o índice e garante que ele não seja menor que 0
        currentIndex = (currentIndex > 0) ? currentIndex - 1 : totalItems - 1;
        
        // Atualiza o carrossel com o novo índice
        updateCarousel(currentIndex);
    });

    // Função para navegar para o próximo slide manualmente
    $('.right.carousel-control').off('click').on('click', function () {
        const totalItems = document.querySelectorAll('.carousel-inner .item').length;

        // Incrementa o índice e garante que ele não seja maior que o total de itens
        currentIndex = (currentIndex < totalItems - 1) ? currentIndex + 1 : 0;
        
        // Atualiza o carrossel com o novo índice
        updateCarousel(currentIndex);
    });

    // Função para abrir o seletor de arquivos quando clicar no botão
    function openFileSelector(buttonId, inputId) {
        const button = document.getElementById(buttonId);
        const input = document.getElementById(inputId);
        button.addEventListener('click', function () {
            // input.click(); // Abre o seletor de arquivos
            enableLink(input['id'])

        });
    }

    let cropperInstanceMobile = null;

    // Função para inicializar o cropper quando o botão é clicado
    function initializeCropper(previewContainerId, inputId) {
        const previewContainer = document.getElementById(previewContainerId);
        const input = document.getElementById(inputId);
        const indexInputMobile = input.getAttribute('data-index-input-mobile'); 

        if (!input.files || !input.files[0]) {
            return;
        }

        // Verifica se já existe uma imagem
        const image = previewContainer.querySelector('img');
        if (!image) {
            return;
        }

        // Destroi o cropper anterior se existir
        if (cropperInstanceMobile) {
            cropperInstance.destroy();
        }

        cropperInstanceMobile = new Cropper(image, {
            {# aspectRatio: 16/9, #}
            aspectRatio: NaN, // Remove a restrição de proporção
            viewMode: '2',
            dragMode: 'move',
            autoCropArea: 1,
            restore: false,
            guides: false,
            center: true, // Centraliza a imagem
            highlight: true,
            cropBoxMovable: true,
            cropBoxResizable: true,
            toggleDragModeOnDblclick: false,
            zoom: function(e){
                var ratioDesktop = Math.round(event.detail.ratio * 100) / 10;
                if(ratioDesktop == 1){
                   ratioDesktop = 0
                }

            },

        });

            // Slider de zoom
            $('#zoom-sliderMobile').slider({
            min: 0.1,
            max: 4,
            value: 1,
            step: 0.01,
            slide: function( event, ui ) {
                if (cropperInstanceMobile) {
                    cropperInstanceMobile.zoomTo(ui.value); // Usa o método zoomTo diretamente no objeto cropper
                } else {
                    console.log('cropperDesktop instance not found');
                }
            }
            });


    }
    // Função para finalizar o corte e atualizar o input com a imagem cortada
    function finalizeCrop(previewContainerId, inputId) {
        const previewContainer = document.getElementById(previewContainerId);


        // Obtém o canvas da imagem cortada
        const croppedCanvas = cropperInstanceMobile



        // Converte o canvas para um Blob (ou você pode usar base64 se preferir)
        croppedCanvas.getCroppedCanvas().toBlob(function(blob) {
            // Atualiza o campo de input com o valor do blob (imagem cortada)
            // const input = document.getElementById(inputId);
            // const indexInputMobile = input.getAttribute('data-index-input-mobile'); 
            const input = document.getElementById(inputId);
            var originalFileNameMObile = input.files[0].name;
            var urlD = URL.createObjectURL(blob);

                            // Obtenha a imagem do previewContainer
                const previewImage = previewContainer.querySelector('img');
                const dataIndexPreview = previewImage.getAttribute('data-index-mobile'); // Obtém o data-index da imagem do previewContainer

                // Obtenha todos os itens do carrossel e seus data-index
                const carouselItems = document.querySelectorAll('.carousel-inner .item');
                carouselItems.forEach((item, index) => {
                    const carouselImage = item.querySelector('img');
                    const dataIndexCarousel = carouselImage.getAttribute('data-index-mobile'); // Obtém o data-index de cada imagem do carrossel

                });


                  // Atualiza o preview e o carrossel



            const index = Array.from(document.querySelectorAll('.carousel-inner .item')).findIndex(item => item.querySelector('img').src === previewContainer.querySelector('img').src);



            $('#zoom-sliderMobile').hide()

            var baseId = input['id'];

            // Inicializa linkId
            let linkId; 

            if (index === 0) {
                linkId = baseId; // Se index for 0, apenas retorna baseId
            } else {
                linkId = `${baseId}${index + 1}`; // Concatenar baseId com (index + 1)
            }


            disableLink(linkId);

            let indexReal=0

            if (linkId === 'imageMobile') {
                indexReal = 0;
            } else if (linkId === 'imageMobile2') {
                indexReal = 1;
            } else {
                // Optional: handle unexpected linkIds
                indexReal=2

            }

            $('img[data-index-mobile=' + indexReal + ']').each(function() {
                var oldSrc = $(this).attr('src'); // Obtém o 'src' antigo
                $(this).attr('src', urlD); // Atualiza o 'src' para a nova imagem

                // Log para verificar se o 'src' foi atualizado
                // console.log('Antigo src:', oldSrc);
                // console.log('Novo src:', $(this).attr('src'));
            });




            const inputatualizado = document.getElementById(linkId);
            var originalFileNameMobile = inputatualizado.files[0].name + '-cropped'; // Nome do arquivo original
            const file = new File([blob], originalFileNameMobile, { type: 'image/png' });
            // Cria um DataTransfer para simular um arquivo sendo inserido no input
            const dataTransfer = new DataTransfer();
            dataTransfer.items.add(file);
            inputatualizado.files = dataTransfer.files; // Atualiza os arquivos do input
            


         });


        // Destroi o cropper
        cropperInstanceMobile.destroy();
        cropperInstanceMobile = null;

    }



    // Função para o evento de clique do botão de cortar
    function bindCropButton(cropButtonId, previewContainerId, inputId) {
        const cropButton = document.getElementById(cropButtonId);
        let isCropping = false; // Estado para verificar se está cortando
        cropButton.addEventListener('click', function () {
            if (!isCropping) {
                initializeCropper(previewContainerId, inputId);
                $('#zoom-sliderMobile').show()

                cropButton.textContent = 'Finalizar Corte'; // Altera o texto do botão
                isCropping = true;

            } else {
                finalizeCrop(previewContainerId, inputId);
                cropButton.textContent = 'Iniciar Corte'; // Reseta o texto do botão
                isCropping = false;
                closeModal()

            }
        });
    }



    // Vincula os botões de cortar imagem para cada campo
    bindCropButton('endCropper', 'previewMobile', 'imageMobile');
    // bindCropButton('endCropper', 'previewMobile', 'imageMobile2');
    // bindCropButton('endCropper', 'previewMobile', 'imageMobile3');



    updatePreview('imageMobile', 'preview-container1', 0);
    updatePreview('imageMobile2', 'preview-container2',1);
    updatePreview('imageMobile3', 'preview-container3',2);


    openFileSelector('btn-file1', 'imageMobile');
    openFileSelector('btn-file2', 'imageMobile2');
    openFileSelector('btn-file3', 'imageMobile3');
});
    //function salve button onChange exhibitionTime
    function handleExhibitionTimeChange(event) {

        const exhibitionTimeOnInput = event.target.value;
        const exhibitionTimeInput = document.getElementById('exhibitionTime').value;
        const campaignSubmitButton = document.getElementById('campaign_step_media_image_submit');
        const hasLetters = /[a-zA-Z!@#$%^&*(),.?":{}|<>+=-]/.test(exhibitionTimeOnInput);
        
        if (!hasLetters && exhibitionTimeInput > 0 && exhibitionTimeOnInput !== '0' && exhibitionTimeOnInput !== '' && exhibitionTimeOnInput !== '00' )  {
            campaignSubmitButton.style.display = 'inline-block';
        }else {
            campaignSubmitButton.style.display = 'none';
        }
    }


</script>






































                                                            {# ANTIGO #}
                                                            
                                                            
                                                                {# <span class="btn default btn-file btn btn-icon btn-primary "> #}
                                                                {# RETIRAR #}
                                                                {# <span class="fileinput-new text-center">
                                                                    Fazer upload
                                                                </span>
                                                                <span class="fileinput-exists">
                                                                    Alterar Imagem
                                                                </span> #}
                                                                {# <input type="file" id="imageMobile" name="file"></span> #}
                                                                {# RETIRAR #}

                                                                {# <button style="margin-left:10px; width:16vh;" ; id="previewButtonFinal" class="btn default btn-icon btn-success hide" data-toggle="modal" data-target="#previewModalFinal">
                                                                    Preview
                                                                </button> #}

                                                                <!-- Modal de Preview Final-->
                                                                <div id="previewModalFinal" class="modal fade" role="dialog" style="display: none; border-radius: 5px; width:70vh;">
                                                                    <div class="modal-dialog" role="document">
                                                                        <div class="modal-content" style="overflow: hidden; width: auto;  height: 80vh; border-radius: 10px; z-index:-1000; padding:10px;">
                                                                            <div class="modal-header">
                                                                                <h5 class="modal-title">
                                                                                    Preview da Imagem
                                                                                </h5>
                                                                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                                                                    <span aria-hidden="true">
                                                                                        &times;
                                                                                    </span>
                                                                                </button>
                                                                            </div>
                                                                            <div class="modal-body" style=" padding: 0; padding-top: 5vh;text-align: center; max-height:100%;">
     

                                                                                        <div id="icon-container-mobile">
                                                                                                <i id="mobileicon" class="fas fa-mobile-alt"></i> <!-- Ícone de telefone -->
                                                                                                <i id="desktopicon" class="fas fa-laptop"></i> <!-- Ícone de laptop -->
                                                                                        </div>
                                                                                <!-- Mockup do celular -->
                                                                                <div id="mockup-container"  style="width: 245px; height: 35vh; background-color: #333; border-radius: 30px; padding: 15px; position: relative; overflow: hidden; margin: 0 auto;">

                                                                                    <!-- Imagem dentro do mockup -->
                                                                                    <img id="previewImageFinal" src="" alt="Preview" style="width: 100%; height: 100%; border-radius: 15px;  object-fit: contain;"> <!-- Barra inferior (simulando botão home) -->

                                                                                </div>
                                     
                                                                            </div>
                                                                        </div>
                                                                        </div>

                                                                    </div>
                                                                </div>
                                                                    <!-- Modal MOBILE para visualização da imagem -->
                                                                    <div id="imageModal" class="modal" style="display: none; border:none !important; position: fixed; top: 0; width: 100%;  heigth:100%; background: rgba(0, 0, 0, 0.5); z-index: 10000; ">

                                                                        {# <div class="modal-content" style="background: #fff; padding: 20px; border-radius: 10px; position: relative; width: 60%; max-heigth:70%; left:25%; top:3%;"> #}
                                                                        <div class="modal-content" style="background: #fff; border:none !important; padding: 20px; border-radius: 10px; position: relative; width: 650px; max-width: 90%;height:86vh; max-height: 86vh; margin: 4vh auto; overflow:hidden">
  
                                                                        <span class="closeMobile" style="position: absolute; top: 10px; right: 10px; cursor: pointer; font-size: 20px; color: #333;">
                                                                                &times;
                                                                            </span>
                                                                            <h4 style="text-align: center; margin-bottom: 10px;">
                                                                                Enviar Imagem
                                                                            </h4>
                                                                            <div id="modalImageContainer" style="display: flex; flex-direction: column; justify-content: center; align-items: center; text-align: center; height:90%; max-height: 90%; ">
                                                                               
                                                                                {# CROPPER #}
                                                                                <div id="cropContainer" style="width:55vh;">
                                                                                    <div class="crop-preview">
                                                                                        <div id="previewMobile" style="text-align: center;">
                                                                                            <img id="mobilePreviewImage" src="" alt="Preview" style="width:55vh; max-width: 100%; height:60vh; max-height: 60vh; border-radius: 10px; object-fit: contain;"></div>
                                                                                        </div>
                                                                                    </div>


                                                                                {# CONTROLES #}
                                                                                <form name="toolbarForm" class="col-md-3">
                                                                                    <div class="toolbar-cropper toolbar-buttons">
                                                                                    
                                                                                    <label class="btn  btn-icon btn-primary" style="width:10vh; margin-top:10%">zoom
                                                                                        <span id="dataZoom"></span>%
                                                                                    </label>
                                                                                    <div id="zoom-slider"></div>
                                                                                    
                                                                                          </div>
                                                                                </form>



                                                                                    <!-- ENVIAR MOBILE-->
                                                                                    <div>
                                                                                            <img src="{{ asset('bundles/admin/theme/images/ajax-loader.gif') }}" alt="" class="loader-post mobile hide" />
                                                                                            <a class="closeMobile btn btn-icon" style="background-color: #f4f4f4; color: ; margin-right: 10px;">
                                                                                                Cancelar
                                                                                            </a>

                                                                                    </div>

                                                                                </div>

                                                                                <br>
                                                                            </div>
                                                                            {# </div> #}

                                                                        </div>

                                                                        {# ERROS  #}
                                                                        <div id="imageMobileError" class="widget-body hide">
                                                                            <p class="error help-block">
                                                                                <span class="label label-warning"></span>
                                                                            </p>
                                                                        </div>

                                                                        <div id="imageMobileWait" class="widget-body hide">
                                                                            <p class="error help-block">
                                                                                <span class="label label-info">
                                                                                    A imagem está sendo enviada e isso pode levar alguns minutos. Aguarde por favor...
                                                                                </span>
                                                                            </p>
                                                                        </div>

                                                                    </div>

                                                                    </div>
                                                                        {# EDICAO DE CAMPANHA #}
                                                                        {% if medias.imageMobile %}
                                                                            <div class="widget-body">
                                                                                <div class="span6">
                                                                                    <a data-lightbox="banner-group" class="bannerLink" href="{{ asset("//" ~ aws_bucket_proxy_name ~"/"~ config.aws_folder_name ~"/"~ medias.imageMobile) }}">
                                                                                        Visualizar Banner 
                                                                                    </a>
                                                                                    {% if medias.imageMobile2 %}
                                                                                        <a data-lightbox="banner-group" class="bannerLink" href="{{ asset("//" ~ aws_bucket_proxy_name ~"/"~ config.aws_folder_name ~"/"~ medias.imageMobile2) }}" style="display:none;">
                                                                                            Visualizar Banner 
                                                                                        </a>
                                                                                    {% endif %}
                                                                                    {% if medias.imageMobile3 %}
                                                                                        <a data-lightbox="banner-group" class="bannerLink" href="{{ asset("//" ~ aws_bucket_proxy_name ~"/"~ config.aws_folder_name ~"/"~ medias.imageMobile3) }}" style="display:none;">
                                                                                            Visualizar Banner 
                                                                                        </a>
                                                                                    {% endif %}
                                                                                </div>
                                                                            </div>
                                                                        {% endif %}

                                                    {# </div> #}

                                                {# </div> #}
                                            </div>
                                                            <div class="row-fluid">
                                                                <div class="span12">
                                                                    {{ form_errors(form) }}
                                                                </div>
                                                            </div>
                                                        {# </div> #}

                                                        <div class="span6">
                                                            <h5 class="heading glyphicons imac">
                                                                <i></i>
                                                                Deseja fazer upload de uma imagem no formato horizontal (desktop)?
                                                            </h5>
                                                            <div class="custom-checkbox-image-horizontal">
                                                                <div style="margin-bottom: 2vh;"></div>
                                                                    {{ form_widget(form.imageHorizontal, {  'attr': {
                                                                            'class': 'custom-checkbox-input',
                                                                            'onchange': 'handleCheckboxChange()',
                                                                        }
                                                                        }) }}
                                                                </div>
                                                            <script>
                                                                document.addEventListener('DOMContentLoaded', function() {
                                                                    var checkbox = document.querySelector('.custom-checkbox-input');
                                                                    // Verifica se o 'medias.imageDesktop' existe e marca o checkbox
                                                                    {% if medias.imageDesktop %}
                                                                        checkbox.checked = true;
                                                                        handleCheckboxChange(); // Chama a função se o checkbox estiver marcado
                                                                    {% endif %}
                                                                });
                                                            </script>
                                                            </div>
                                                        </div>

                                                        <div class="span6" id="obs" style=" border-radius: 10px; background: #FFF59E; padding:2vh; margin-top:2vh; display:block;">
                                                            <p>
                                                                <b>
                                                                    Obs:
                                                                </b>
                                                                Se nenhum arquivo de imagem horizontal for enviado, usaremos automaticamente o formato
                                                                <b>
                                                                    vertical
                                                                </b>
                                                                para exibição em qualquer tipo de dispositivos.
                                                            </p>
                                                        </div>

                                                        <div class="row-fluid">
                                                            <div class="span7" id="desktopBannerSection" style="display: none; margin-top:2vh;">
                                                                <div class="widget row-fluid" style="border-radius: 5px; overflow: hidden; border: solid 0.5px;; padding-bottom:2vh; max-width: 100%;"">
                                                                    <div class="widget-head" style="border-bottom: solid  black 0.5px; background:none">
                                                                        <h4 class="heading glyphicons macbook">
                                                                            <i></i>
                                                                            <b>
                                                                                Banner Desktop - Formato permitido JPG, JPEG e PNG
                                                                            </b>
                                                                            <span style="font-size: 0.7em; color: #555">
                                                                                Resolução indicada 1024x768px
                                                                            </span>
                                                                        </h4>
                                                                    </div>
                                                                    {# <div class="widget-body" style="padding: 3vh;"> #}
                                                                    <div class="widget-body" style="padding: 3vh; display: flex; flex-direction: column; align-items: center;">

                                                                        <div class="span upload" style="display: flex; justify-content: center; align-items: center; height: 100%; flex-direction: column;">

                                                                            <div id="imageDesktopName" class="fileinput fileinput-new pull-left" data-provides="fileinput" style="text-align: center;">
                                                                                {# <div> #}

                                                                            <ul id="uploadedImageNamesDesktop" style="list-style-type: none; padding: 0;">
                                                                                                 <!-- Lista de nomes de imagens será inserida aqui -->
                                                                                              </ul>

                                                                                    <div   class="widget-body hide" style="right: 30vh; position: relative; ">
                                                                                        {# <p>
                                                                                            <span id="imageDesktopNameText" class="glyphicons"></span>
                                                                                            <span style="font-size: 30px; color: #4CAF50; line-height: 1;">
                                                                                                &#10003;
                                                                                            </span>

                                                                                        </p> #}


                                                                                    </div>
                                                                    <div>






<!-- Botão para abrir o modal  DESKTOP-->
<span class="btn default btn btn-icon btn-primary" id="enviar-carrosel-desktop" data-toggle="modal" data-target="#modal-enviar-imagem-desktop">
    Enviar Imagens
</span>


{# </div> #}
{# </div> #}

                                                                                {% if medias.imageDesktop %}
                                                                                    <div class="widget-body">
                                                                                        <div class="span6">
                                                                                            {% if medias.imageDesktop %}
                                                                                                <a data-lightbox="desktop-banner-group" style=" position: absolute;left: 1%"; class="bannerLink" href="{{ asset("//" ~ aws_bucket_proxy_name ~"/"~ config.aws_folder_name ~"/"~ medias.imageDesktop) }}">
                                                                                                    Visualizar Banner 
                                                                                                </a>
                                                                                            {% endif %}
                                                                                            {% if medias.imageDesktop2 %}
                                                                                                <a data-lightbox="desktop-banner-group" class="bannerLink" href="{{ asset("//" ~ aws_bucket_proxy_name ~"/"~ config.aws_folder_name ~"/"~ medias.imageDesktop2) }}" style="display:none;">
                                                                                                    Visualizar Banner 
                                                                                                </a>
                                                                                            {% endif %}
                                                                                            {% if medias.imageDesktop3 %}
                                                                                                <a data-lightbox="desktop-banner-group" class="bannerLink" href="{{ asset("//" ~ aws_bucket_proxy_name ~"/"~ config.aws_folder_name ~"/"~ medias.imageDesktop3) }}" style="display:none;">
                                                                                                    Visualizar Banner 
                                                                                                </a>
                                                                                            {% endif %}
                                                                                        </div>
                                                                                    </div>
                                                                                {% endif %}


<!-- Modal CARROSEL -->
<div id="modal-enviar-imagem-desktop" class="modal fade" tabindex="-1" role="dialog" style="max-height: 85%;width:60%; overflow: scroll; display:none;  border-radius: 5px;">
    <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
        <div class="modal-content">

        
            <div class="frame-lateral-esquerdo">
                <!-- Espaco Foto 1 -->
                <div class="form-group">
                
                    <div class="fileupload fileupload-new" data-provides="fileinput">
                        <div class="input-group">
                            <div class="fileinput-new  espaco-foto" style="width: 50%;  height: 20vh;" >
                                    <i class="fas fa-image"></i>
                           </div>
                            <div class="fileinput-exists thumbnail preview-container" id="preview-container1-desktop"  style="width: 50%;  height: 20vh; align-content: center;">
                                <!-- O preview será exibido aqui -->
                            </div>

                                <div class="toolbar-cropper toolbar-buttons">
                                
                                    {# <label class="btn  btn-icon btn-primary" style="width:10vh; margin-top:10%"> #}
                                    <div id="zoom-sliderDesktop-preview-container1"></div>

                                </div>
                            <div class="input-group-btn" id="input-group-btn1">
                             <a class="btn btn-primary btn-file" id="btn-file1-desktop">
                                    <span class="fileupload-new">Selecionar Imagem 1</span>
                                    <span class="fileupload-exists">Alterar</span>
                                    <input type="file" id="imageDesktop" name="imageDesktop" accept="image/*" data-index-input-desktop="0" />

                                                {{ form_widget(form.imageDesktop) }}

                                </a>
                                <a href="javascript:void(0);" class="btn crop-image-desktop hide" data-preview="preview-container1-desktop" data-input="imageDesktop" id="cropper1-desktop">Cortar Imagem 1</a>
                                <a href="#" class="btn btn-danger fileupload-exists" data-dismiss="fileupload">Remover</a>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Espaco Foto 2 -->
                <div class="form-group" id="image-upload-desktop-2" style="display: none;">
                    <div class="fileupload fileupload-new" data-provides="fileinput">
                        <div class="input-group">
                            <div class="fileinput-new  espaco-foto" style="width: 50%;  height: 20vh;" >
                                    <i class="fas fa-image"></i>
                           </div>
                            <div class="fileinput-exists thumbnail preview-container" id="preview-container2-desktop"  style="width: 50%;  height: 20vh; align-content: center;">
                                <!-- O preview será exibido aqui -->
                            </div>

                                <div class="toolbar-cropper toolbar-buttons">
                                
                                    <div id="zoom-sliderDesktop-preview-container2"></div>
                                </div>

                            <div class="input-group-btn" id="input-group-btn2">
                             <a class="btn btn-primary btn-file" id="btn-file2-desktop">
                                    <span class="fileupload-new">Selecionar Imagem 2</span>
                                    <span class="fileupload-exists">Alterar</span>
                                    <input type="file" id="imageDesktop2" name="imageDesktop2" accept="image/*" data-index-input-desktop="1"  />

                                                {{ form_widget(form.imageDesktop2) }}

                                </a>
                                <a href="javascript:void(0);" class="btn crop-image-desktop hide" data-preview="preview-container2-desktop" data-input="imageDesktop2" id="cropper2-desktop">Cortar Imagem 2</a>
                                <a href="#" class="btn btn-danger fileupload-exists" data-dismiss="fileupload">Remover</a>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Espaco Foto 3 -->
                <div class="form-group" id="image-upload-desktop-3" style="display: none;">
                    <div class="fileupload fileupload-new" data-provides="fileinput">
                        <div class="input-group">
                            <div class="fileinput-new  espaco-foto" style="width: 50%;  height: 20vh;" >
                                    <i class="fas fa-image"></i>
                           </div>
                            <div class="fileinput-exists thumbnail preview-container" id="preview-container3-desktop"  style="width: 50%;  height: 20vh; align-content: center;">
                                <!-- O preview será exibido aqui -->
                            </div>
                                <div class="toolbar-cropper toolbar-buttons">
                                
                                    <div id="zoom-sliderDesktop-preview-container3"></div>
                                </div>


                            <div class="input-group-btn" id="input-group-btn3">
                             <a class="btn btn-primary btn-file" id="btn-file3-desktop">
                                    <span class="fileupload-new">Selecionar Imagem 3</span>
                                    <span class="fileupload-exists">Alterar</span>
                                    <input type="file" id="imageDesktop3" name="imageDesktop3" accept="image/*" data-index-input-desktop="2"  />
                                                {{ form_widget(form.imageDesktop3) }}

                                </a>

                                <a href="javascript:void(0);" class="btn crop-image-desktop hide" data-preview="preview-container3-desktop" data-input="imageDesktop3" id="cropper3-desktop">Cortar Imagem 3</a>
                                <a href="#" class="btn btn-danger fileupload-exists" data-dismiss="fileupload">Remover</a>
                            </div>
                        </div>
                    </div>
                </div>


                <!-- Botão para adicionar mais imagens -->
                    <div class="form-group" id="add-image-btn-container-desktop">
                        <button type="button" class="btn " id="add-image-btn-desktop">+</button>
                    </div>

            </div>

            <div class="conteudo-modal">
                <!-- Conteúdo do modal -->

                <div id="icon-container-desktop">
                        <i id="mobileicon" class="fas fa-mobile-alt"></i> <!-- Ícone de telefone -->
                        <i id="desktopicon" class="fas fa-laptop"></i> <!-- Ícone de laptop -->
                </div>

        <!-- Carrossel para exibir as fotos -->
                <!-- Carrossel para exibir as fotos -->
                <div id="carousel-imagensd" class="carousel slide">
                    <!-- Indicadores -->
                    <ol class="carousel-indicators" id="carousel-indicators-desktop">
                        <!-- Indicadores serão adicionados dinamicamente -->
                    </ol>

                    <!-- Itens do carrossel DESKTOP-->

                    {# <div class="carousel-inner" id="carousel-inner" style="width: 245px; height: 55vh; background-color: #333; border-radius: 30px; padding: 15px; position: relative; overflow: hidden; margin: 0 auto;"> #}


                <div style=" height: 60vh; width: 40vw; border:1px solid transparent; height:65vh; max-height:65vh;">
                    <div class="carousel-inner " id="carousel-inner-desktop" style="width: 80%; height: 35vh; background-color: #333; border-radius: 15px; padding: 20px; position: relative; overflow: hidden; margin: 0 auto;">
                        <!-- Itens do carrossel serão adicionados dinamicamente -->
                    </div>
                </div>
                    <!-- Controles do carrossel -->
                    <a class="left carousel-control" id="desktop-prev" style="  background: none; color: red; border:none;"  href="#carousel-imagensd" data-slide="prev">
                        <span class="fas fa-chevron-left"></span>
                    </a>
                    <a class="right carousel-control" id="desktop-next" style="  background: none; color: red; border:none;" href="#carousel-imagensd" data-slide="next">
                        <span class="fas fa-chevron-right"></span>
                      </a>
                </div>



                <!-- ENVIAR DESKTOP-->
                <div style="margin-bottom:10px;">
                        <img src="{{ asset('bundles/admin/theme/images/ajax-loader.gif') }}" alt="" class="loader-post desktop hide" />


                        <button class="btn btn-icon" type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">Cancelar</span>
                        </button>
                        <a href="javascript:void(0);" id="imageDesktopSubmit" class="btn btn-icon btn-primary ">
                            <i></i>
                                Enviar
                        </a>
                    {# </div> #}

                </div>
            </div>
        </div>
    </div>
</div>
</div>
</div>




<!-- Modal CROPPER  DESKTOP-->
<div id="desktopModalCropper" class="modal" style=" display:none; border:none !important; position: fixed; top: 0; width: 90%; height:90%; background: rgba(0, 0, 0, 0.5); ">
    <div class="modal-content" style="background: #fff; border:none !important; padding: 20px; border-radius: 10px; position: relative; width: 650px; max-width: 90%; height:86vh; max-height: 80vh; margin: 4vh auto; overflow:hidden">
        <span class="closeDesktop" style="position: absolute; top: 10px; right: 10px; cursor: pointer; font-size: 20px; color: #333;">
            &times;
        </span>
        <h4 style="text-align: center; margin-bottom: 10px;">Cortar Imagem</h4>
        <div id="modalImageContainer" style="display: flex; flex-direction: column; justify-content: center; align-items: center; text-align: center; height:90%; max-height: 90%;">
            <!-- CROPPER -->
            <div id="cropContainer" style="width:55vh;">
                <div class="crop-preview">
                    <div id="previewDesktop" style="text-align: center;">
                        <img id="desktopPreviewImage" src="" alt="Preview" style="width:55vh; max-width: 100%; height:60vh; max-height: 60vh; border-radius: 10px; object-fit: contain;">
                    </div>
                </div>
            </div>

                <!-- CONTROLES -->
                <form name="toolbarForm" class="col-md-3" style="width:40%;">
                    <div class="toolbar-cropper toolbar-buttons">
                    
                        <div id="zoom-sliderDesktop"></div>
                    
                    </div>
                </form>

                <div style='margin-top:20px;'>
                    
                    <a class="closeDesktop btn btn-icon" style="background-color: #f4f4f4; color: ; margin-right: 10px;">Cancelar </a>
                  <a href="javascript:void(0);" class="btn btn-icon  btn-primary crop-image-desktop  " id="endCropperDesktop"> Iniciar Corte</a>

                </div>
        </div>
    </div>
</div>




















<script>


    // Função para desabilitar o link
    function disableLink(linkId) {
        const link = document.querySelector(`a[data-input="${linkId}"]`);
        link.classList.add('link-disabled'); // Adiciona a classe
    }

    // Função para habilitar o link
    function enableLink(linkId) {
        const link = document.querySelector(`a[data-input="${linkId}"]`);
        link.classList.remove('link-disabled'); // Remove a classe
    }

    // Obtenha o modal e o botão de fechar
    const modalDesktop = document.getElementById('desktopModalCropper');
    // const closeModalButton = document.querySelector('.closeDesktop');

    // Função genérica para abrir o modal
    function openModalDesktop() {
        modalDesktop.style.display = 'block'; // Exibe o modal
    }

        // Função genérica para abrir o modal
    function closeModalDesktop() {
        modalDesktop.style.display = 'none'; // Exibe o modal
    }

    // Adiciona o evento de clique a todos os botões com a classe "crop-image"
    document.querySelectorAll('.crop-image-desktop').forEach(function(button) {
        button.addEventListener('click', openModalDesktop);
    });


        // Adiciona o evento de clique a todos os botões com a classe "crop-image"
    document.querySelectorAll('.closeDesktop').forEach(function(button) {
        button.addEventListener('click', closeModalDesktop);
    });












document.getElementById('add-image-btn-desktop').addEventListener('click', function() {
    // Verifica se o segundo campo de upload está visível
    if (document.getElementById('image-upload-desktop-2').style.display === 'none') {
        document.getElementById('image-upload-desktop-2').style.display = 'block';
        disableLink('imageDesktop');

    } else if (document.getElementById('image-upload-desktop-3').style.display === 'none') {
        document.getElementById('image-upload-desktop-3').style.display = 'block';
        disableLink('imageDesktop2');

        // Esconde o botão "+" depois que o terceiro campo for adicionado
        document.getElementById('add-image-btn-container-desktop').style.display = 'none';
    }
});




document.addEventListener('DOMContentLoaded', function () {


   // Função para atualizar o preview da imagem e adicionar ao carrossel
    function updatePreview(inputId, previewContainerId,index) {
        const input = document.getElementById(inputId);
        const indexInputDesktop = input.getAttribute('data-index-input-desktop'); 

        const previewContainer = document.getElementById(previewContainerId);
        {# const carouselInner = document.getElementsByClassName('carousel-inner-desktop')[0]; // Acessa o primeiro elemento da coleção #}
        const carouselInner = document.getElementById('carousel-inner-desktop');

        {# var carouselInnerElements = document.getElementsByClassName('my-carousel'); #}
        {# var carouselInner = carouselInnerElements.length > 0 ? carouselInnerElements[0] : null; #}
        const indicators = document.getElementById('carousel-indicators-desktop');
        const cropperImageDesktop = document.getElementById('desktopPreviewImage');



        {# console.log('carouselInner',carouselInner) #}
        {# console.log('indicators:', indicators); #}
        if (!carouselInner) {
            console.error('carouselInner is not found');
            return;
        }

        input.addEventListener('change', function () {
            const file = input.files[0];
            if (file && file.type.match('image.*')) {
                const reader = new FileReader();
                
                reader.onload = function (e) {
                    const img = document.createElement('img');
                    img.src = e.target.result;
                    img.className = 'img-responsive'; // Adiciona a classe para ajustar a imagem
                    
                    // Atualiza o preview
                    previewContainer.innerHTML = ''; // Limpa o conteúdo existente
                    previewContainer.appendChild(img);

                    img.style.width = '100%';  // Aplica largura de 100%
                    img.style.height = '100%';  // Aplica altura de 100%
                    img.style.borderRadius = '15px';  // Aplica bordas arredondadas
                    img.style.objectFit = 'contain';  // Ajuste da imagem dentro do contêiner
                    cropperImageDesktop.src = "";
                    cropperImageDesktop.src= e.target.result;
                    
                    // Atualiza o carrossel
                    const items = carouselInner.getElementsByClassName('item');
                    const itemCount = items.length;
                    img.setAttribute('data-index', indexInputDesktop); // Adiciona o índice como um atributo data
                    $('#cropper' + (itemCount+1)+ '-desktop').show()

                    if (index < itemCount) {
                        // Atualiza a imagem existente
                        const existingItem = items[index];
                        existingItem.innerHTML = ''; // Limpa o conteúdo existente
                        existingItem.appendChild(img.cloneNode(true));

                    } else {
                        // Adiciona uma nova imagem se o índice for maior que o número de itens
                        const newItem = document.createElement('div');
                        newItem.className = 'item';
                        if (itemCount === 0) {
                            newItem.classList.add('active'); // Define o primeiro item como ativo
                        }
                        newItem.setAttribute('data-index-desktop', indexInputDesktop); 

                        newItem.appendChild(img.cloneNode(true));
                        carouselInner.appendChild(newItem);

                        // Atualiza os indicadores do carrossel
                        const newIndicator = document.createElement('li');
                        newIndicator.setAttribute('data-target', '#carousel-imagensd');
                        newIndicator.setAttribute('data-slide-to', itemCount);
                        if (itemCount === 0) {
                            newIndicator.classList.add('active');
                        }
                        indicators.appendChild(newIndicator);

                    }

                    // Atualiza os controles do carrossel
                    if (itemCount === 0) {
                        // Se for o primeiro item, inicialize o carrossel
                        $('#carousel-imagensd').carousel();

                    } else {
                        // Atualiza o carrossel
                        $('#carousel-imagensd').carousel(itemCount - 1); // Navega para o último item adicionado
                    }
                }
                
                reader.readAsDataURL(file);
            } else {
                previewContainer.innerHTML = 'Formato de arquivo não suportado.';
            }
        });
    }


            // Função para navegar para o slide anterior
    $('#desktop-prev').off('click').on('click', function () {
        $('#carousel-imagensd').carousel('prev');
    });

    // Função para navegar para o próximo slide
    $('#desktop-next').off('click').on('click', function () {
        $('#carousel-imagensd').carousel('next');
    });



    // Variável para armazenar o índice atual do carrossel no desktop
let currentIndexDesktop = 0;

// Função para atualizar manualmente o item ativo do carrossel desktop
function updateCarouselDesktop(currentIndex) {
    const carroselInner = document.getElementById('carousel-inner-desktop')
    const items = carroselInner.querySelectorAll('.item');
    const totalItems = items.length;

    // Remove a classe 'active' de todos os itens
    items.forEach(item => item.classList.remove('active'));

    // Adiciona a classe 'active' ao item correspondente ao índice atual
    if (totalItems > 0) {
        items[currentIndex].classList.add('active');
    }

}

// Função para atualizar os indicadores manualmente
function updateIndicatorsDesktop(currentIndex) {
    const indicators = document.getElementById('carousel-indicators-desktop');
    const indicatorItems = indicators.querySelectorAll('li');

    // Remove a classe 'active' de todos os indicadores
    indicatorItems.forEach(indicator => indicator.classList.remove('active'));

    // Adiciona a classe 'active' ao indicador correspondente ao índice atual
    if (indicatorItems.length > 0) {
        indicatorItems[currentIndex].classList.add('active');
    }
}

// Função para navegar para o slide anterior no desktop manualmente
$('#desktop-prev').off('click').on('click', function () {
    const carroselInner = document.getElementById('carousel-inner-desktop')
    const totalItems = carroselInner.querySelectorAll('.item').length;
    {# const totalItems = document.querySelectorAll('.carousel-inner-desktop .item').length; #}

    // Decrementa o índice e garante que ele não seja menor que 0
    currentIndexDesktop = (currentIndexDesktop > 0) ? currentIndexDesktop - 1 : totalItems - 1;
    
    // Atualiza o carrossel e os indicadores com o novo índice
    updateCarouselDesktop(currentIndexDesktop);
    updateIndicatorsDesktop(currentIndexDesktop);
});

// Função para navegar para o próximo slide no desktop manualmente
$('#desktop-next').off('click').on('click', function () {
    const carroselInner = document.getElementById('carousel-inner-desktop')
    const totalItems = carroselInner.querySelectorAll('.item').length;
    {# const totalItems = document.querySelectorAll('.carousel-inner-desktop .item').length; #}

    // Incrementa o índice e garante que ele não seja maior que o total de itens
    currentIndexDesktop = (currentIndexDesktop < totalItems - 1) ? currentIndexDesktop + 1 : 0;
    
    // Atualiza o carrossel e os indicadores com o novo índice
    updateCarouselDesktop(currentIndexDesktop);
    updateIndicatorsDesktop(currentIndexDesktop);
});



    // Função para abrir o seletor de arquivos quando clicar no botão
    function openFileSelector(buttonId, inputId) {
        const button = document.getElementById(buttonId);
        const input = document.getElementById(inputId);
        button.addEventListener('click', function () {
            {# input.click(); // Abre o seletor de arquivos #}
            enableLink(input['id'])
        });
    }


   let cropperInstanceDesktop = null;

    // Função para inicializar o cropper quando o botão é clicado
    function initializeCropper(previewContainerId, inputId) {
        const previewContainer = document.getElementById(previewContainerId);
        const input = document.getElementById(inputId);
        const indexInputDesktop = input.getAttribute('data-index-input-desktop'); 

        if (!input.files || !input.files[0]) {
            return;
        }

        // Verifica se já existe uma imagem
        const image = previewContainer.querySelector('img');
        if (!image) {
            return;
        }

        // Destroi o cropper anterior se existir
        if (cropperInstanceDesktop) {f
            cropperInstance.destroy();
        }

        cropperInstanceDesktop = new Cropper(image, {
            {# aspectRatio: 16/9, #}
            aspectRatio: NaN, // Remove a restrição de proporção
            viewMode: '2',
            dragMode: 'move',
            autoCropArea: 1,
            restore: false,
            guides: false,
            center: true, // Centraliza a imagem
            highlight: true,
            cropBoxMovable: true,
            cropBoxResizable: true,
            toggleDragModeOnDblclick: false,
            zoom: function(e){
                var ratioDesktop = Math.round(event.detail.ratio * 100) / 10;
                if(ratioDesktop == 1){
                   ratioDesktop = 0
                }

            },


        });

            // Slider de zoom
            $('#zoom-sliderDesktop').slider({
            min: 0.1,
            max: 4,
            value: 1,
            step: 0.01,
            slide: function( event, ui ) {
                if (cropperInstanceDesktop) {
                    cropperInstanceDesktop.zoomTo(ui.value); 
                } else {
                    console.log('cropperDesktop instance not found');
                }
            }
            });

    }


        // Função para finalizar o corte e atualizar o input com a imagem cortada
    function finalizeCrop(previewContainerId, inputId) {
        const previewContainer = document.getElementById(previewContainerId);


        // Obtém o canvas da imagem cortada
        const croppedCanvas = cropperInstanceDesktop



        // Converte o canvas para um Blob (ou você pode usar base64 se preferir)
        cropperInstanceDesktop.getCroppedCanvas().toBlob(function(blob) {
            // Atualiza o campo de input com o valor do blob (imagem cortada)
            const input = document.getElementById(inputId);
            var originalFileNameMObile = input.files[0].name;
            var urlD = URL.createObjectURL(blob);


            {# const file = new File([blob], originalFileNameMObile, { type: 'image/png' }); #}
            
            // Cria um DataTransfer para simular um arquivo sendo inserido no input
            {# const dataTransfer = new DataTransfer();
            dataTransfer.items.add(file);
            input.files = dataTransfer.files; #}

         const carroselInner = document.getElementById('carousel-inner-desktop')
         const totalItems = carroselInner.querySelectorAll('.item')


            // Atualiza o preview e o carrossel
            const index = Array.from(totalItems).findIndex(item => item.querySelector('img').src === previewContainer.querySelector('img').src);
            {# var $img = $('img[data-index="' + index + '"]'); #}
            if (index== -1){
            }
            {# $('img[data-index="' + index + '"]').each(function() {
                var oldSrc = $(this).attr('src'); // Obtém o 'src' antigo
                $(this).attr('src', urlD); // Atualiza o 'src' para a nova imagem

                // Log para verificar se o 'src' foi atualizado
            }); #}

            var baseId = input['id'];

            // Inicializa linkIdDesktop
            let linkIdDesktop; 

            if (index === 0) {
                linkIdDesktop = baseId; // Se index for 0, apenas retorna baseId
            } else {
                linkIdDesktop = `${baseId}${index + 1}`; // Concatenar baseId com (index + 1)
            }


            disableLink(linkIdDesktop);

            const inputatualizado = document.getElementById(linkIdDesktop);
            var originalFileNameMobile = inputatualizado.files[0].name + '-cropped'; // Nome do arquivo original
            const file = new File([blob], originalFileNameMobile, { type: 'image/png' });
            // Cria um DataTransfer para simular um arquivo sendo inserido no input
            const dataTransfer = new DataTransfer();
            dataTransfer.items.add(file);
            inputatualizado.files = dataTransfer.files; // Atualiza os arquivos do input
            






            $('#zoom-sliderDesktop').hide()

            var baseId = input['id'];

            // Inicializa linkId
            let linkId; 

            if (index === 0) {
                linkId = baseId; // Se index for 0, apenas retorna baseId
            } else {
                linkId = `${baseId}${index + 1}`; // Concatenar baseId com (index + 1)
            }


            disableLink(linkId);

            let indexReal=0

            if (linkId === 'imageDesktop') {
                indexReal = 0;
            } else if (linkId === 'imageDesktop2') {
                indexReal = 1;
            } else {
                // Optional: handle unexpected linkIds
                indexReal=2

            }

            $('img[data-index=' + indexReal + ']').each(function() {
                var oldSrc = $(this).attr('src'); // Obtém o 'src' antigo
                $(this).attr('src', urlD); // Atualiza o 'src' para a nova imagem

                // Log para verificar se o 'src' foi atualizado
            });
















         });


        // Destroi o cropper
        cropperInstanceDesktop.destroy();
        cropperInstanceDesktop = null;
    }


    // Função para o evento de clique do botão de cortar
    function bindCropButton(cropButtonId, previewContainerId, inputId) {
        const cropButton = document.getElementById(cropButtonId);
        let isCropping = false; // Estado para verificar se está cortando
        cropButton.addEventListener('click', function () {
            if (!isCropping) {
                initializeCropper(previewContainerId, inputId);
                $('#zoom-sliderDesktop').show()

                cropButton.textContent = 'Finalizar Corte'; // Reseta o texto do botão
                isCropping = true;

            } else {
                finalizeCrop(previewContainerId, inputId);
                cropButton.textContent = 'Iniciar Corte'; // Reseta o texto do botão
                isCropping = false;
                {# clearImage(previewContainerId); // Limpa a imagem do preview #}

                closeModalDesktop()


            }
        });
    }


    bindCropButton('endCropperDesktop', 'previewDesktop', 'imageDesktop');

    // Vincula os botões de cortar imagem para cada campo
    {# bindCropButton('cropper1-desktop', 'preview-container1-desktop', 'imageDesktop');
    bindCropButton('cropper2-desktop', 'preview-container2-desktop', 'imageDesktop2');
    bindCropButton('cropper3-desktop', 'preview-container3-desktop', 'imageDesktop3'); #}


    




    updatePreview('imageDesktop', 'preview-container1-desktop', 0);
    updatePreview('imageDesktop2', 'preview-container2-desktop',  1);
    updatePreview('imageDesktop3', 'preview-container3-desktop', 2);


    openFileSelector('btn-file1-desktop', 'imageDesktop');
    openFileSelector('btn-file2-desktop', 'imageDesktop2');
    openFileSelector('btn-file3-desktop', 'imageDesktop3');


});

</script>

















</div>

</div>
</div>
</div>





                                                                                    

                                                                                    {# <span class="btn default btn-file btn btn-icon btn-primary "> #}
                                                                                        {# <span class="fileinput-new text-center">
                                                                                            Fazer upload
                                                                                        </span>
                                                                                        <span class="fileinput-exists">
                                                                                            Alterar Imagem
                                                                                        </span>
                                                                                        <input type="file" id="imageDesktop" name="file"></span> #}
                                                                {# <button style="margin-left:10px; width:16vh;" ; id="previewButtonFinal" class="btn default btn-icon btn-success hide" data-toggle="modal" data-target="#previewModalFinal">
                                                                    Preview
                                                                                        <button style="margin-left:10px; width:16vh;" ; id="previewButtonFinalDesktop" class="btn default btn-icon btn-success hide" data-toggle="modal" data-target="#previewModalFinalDesktop">
                                                                                            Preview #}
                                                                                        {# </button> #}

                                                                                        <!-- Modal DESKTOP de Preview Final-->
                                                                                      <div id="previewModalFinalDesktop" class="modal fade" role="dialog" style="display: none; border-radius: 5px; width:70vh;"">
                                                                                        <div class="modal-dialog" role="document">
                                                                                            <div class="modal-content" style="overflow: hidden; width: auto;  height: 80vh; border-radius: 10px; z-index:-1000; padding:10px;">
                                                                                                <div class="modal-header">
                                                                                                    <h5 class="modal-title" >
                                                                                                            Preview da Imagem
                                                                                                        </h5>
                                                                                                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                                                                                            <span aria-hidden="true">
                                                                                                                &times;
                                                                                                            </span>
                                                                                                        </button>
                                                                                                    </div>
                                                                                                    <div class="modal-body"
                                                                                                    style="padding: 0;
                                                                                                        padding-top: 5vh;
                                                                                                        text-align: center;
                                                                                                        max-height:100%;
                                                                                                        display: flex;
                                                                                                        align-content: center;
                                                                                                        align-items: center;
                                                                                                        flex-direction: column;
                                                                                                    }">
                                                                                                        {# <div id="icon-container-desktop">
                                                                                                            <i id="mobileicon" class="fas fa-mobile-alt"></i> <!-- Ícone de telefone -->
                                                                                                            <i id="desktopicon" class="fas fa-laptop"></i> <!-- Ícone de laptop -->
                                                                                                        </div> #}


                                                                                                        <!-- Mockup do Computador -->
                                                                                                        <div id="mockup-container-desktop"  style="width: 80%; height:35vh; background-color: #333; border-radius: 15px; padding: 20px; max-width:80%; ">
                                                                                                                         <img id="previewImageFinalDesktop" src="" alt="Preview" 
                                                                                                                style="width: 100%; height: 100%; border-radius: 15px; object-fit: contain;">
                                                                                                        </div>
                                    
                                                                                                        </div> 
                                                                                                    </div>
                                                                                                </div>
                                                                                            </div>
                                                                                        </div>
                                                                                    </div>
                                                                                </div>

                                                                            <!-- Modal DESKTOP para visualização da imagem -->



                                                                                <div id="imageModalDesktop" class="modal" style="display: none;heigth:100%;  border:none !important; position: fixed; top: 0; width: 100%;  background: rgba(0, 0, 0, 0.5); z-index: 10000;">
                                                                                    {# <div class="modal-content" style="background: #fff; padding: 20px; border:none !important;border-radius: 10px; position: relative; width: 50%; max-heigth:75%; height:86vh; max-height: 86vh;  padding-top:2%; margin: 4vh auto; overflow:hidden" > #}
                                                                                    <div class="modal-content" style="background: #fff; border:none !important; padding: 20px; border-radius: 10px; position: relative; width: 750px; max-width: 90%;height:86vh; max-height: 86vh; margin: 4vh auto; overflow:hidden">

                                                                                        <span class="closeDesktop" style="position: absolute; top: 10px; right: 10px; cursor: pointer; font-size: 20px; color: #333;">
                                                                                            &times;
                                                                                        </span>
                                                                                        <h4 style="text-align: center; margin-bottom: 10px;">
                                                                                            Enviar Imagem
                                                                                        </h4>
                                                                                        <div id="modalImageContainer" style="display: flex; flex-direction: column; justify-content: center; align-items: center; text-align: center; height:90%; max-height: 90%; ">

                                                                                            {# CROPPER  DESKTOP#}
                                                                                            <div id="cropContainer" style="width:55vh;">
                                                                                                <div class="crop-preview">
                                                                                                    <div id="previewDesktop" style="text-align: center;">
                                                                                                        {# <img id="desktopPreviewImage" src="" alt="Preview" style="width:55vh; max-width: 60vh; height:60vh; max-height: 60vh; border-radius: 10px; object-fit: contain;"></div> #}
                                                                                                    </div>
                                                                                                </div>
                                                                                            {# </div> #}

                                                                                            {# CONTROLES #}
                                                                                                <form name="toolbarForm" class="col-md-3">
                                                                                                    <div class="toolbar-cropper toolbar-buttons">
                                                                                                    
                                                                                                        <label class="btn  btn-icon btn-primary" style="width:10vh; margin-top:10%">zoom
                                                                                                            <span id="dataZoomDesktop"></span>%
                                                                                                        </label>
                                                                                                        <div id="zoom-sliderDesktop"></div>
                                                                                                    
                                                                                                    </div>
                                                                                                </form>
                                                                                            {# ENVIAR DESKTOP #}
                                                                                            <div style="display: flex; justify-content: center; align-items: center; margin-top: 20px;">
                                                                                                    <img src="{{ asset('bundles/admin/theme/images/ajax-loader.gif') }}" alt="" class="loader-post desktop hide" />
                                                                                                    <a class="closeDesktop btn btn-icon" style="background-color: #f4f4f4; color: ; margin-right: 10px;">
                                                                                                        Cancelar
                                                                                                    </a>
                                                                                                    {# <a href="javascript:void(0);" id="imageDesktopSubmit" class="btn btn-icon btn-primary">
                                                                                                        <i></i>
                                                                                                        Enviar
                                                                                                    </a> #}
                                                                                                </div>
                                                                                                {# {{ form_widget(form.imageDesktop) }} #}
                                                                                            </div>
                                                                                        </div>






                                                                                  {# </div> #}
                                                                                    <div id="imageDesktopError" class="widget-body hide">
                                                                                        <p class="error help-block">
                                                                                            <span class="label label-warning"></span>
                                                                                        </p>
                                                                                    </div>
                                                                                    <div id="imageDesktopWait" class="widget-body hide">
                                                                                        <p class="error help-block">
                                                                                            <span class="label label-info">
                                                                                                A imagem está sendo enviada e isso pode levar alguns minutos. Aguarde por favor...
                                                                                            </span>
                                                                                        </p>
                                                                                    </div>
                                                                                </div>

                                                                                {# </div> #}
                                                                                {# {% if medias.imageDesktop %}
                                                                                    <div class="widget-body">
                                                                                        <div class="span6">
                                                                                            {% if medias.imageDesktop %}
                                                                                                <a data-lightbox="desktop-banner-group" class="bannerLink" href="{{ asset("//" ~ aws_bucket_proxy_name ~"/"~ config.aws_folder_name ~"/"~ medias.imageDesktop) }}">
                                                                                                    Visualizar Banner 
                                                                                                </a>
                                                                                            {% endif %}
                                                                                            {% if medias.imageDesktop2 %}
                                                                                                <a data-lightbox="desktop-banner-group" class="bannerLink" href="{{ asset("//" ~ aws_bucket_proxy_name ~"/"~ config.aws_folder_name ~"/"~ medias.imageDesktop2) }}" style="display:none;">
                                                                                                    Visualizar Banner 
                                                                                                </a>
                                                                                            {% endif %}
                                                                                            {% if medias.imageDesktop3 %}
                                                                                                <a data-lightbox="desktop-banner-group" class="bannerLink" href="{{ asset("//" ~ aws_bucket_proxy_name ~"/"~ config.aws_folder_name ~"/"~ medias.imageDesktop3) }}" style="display:none;">
                                                                                                    Visualizar Banner 
                                                                                                </a>
                                                                                            {% endif %}
                                                                                        </div>
                                                                                    </div>
                                                                                {% endif %} #}

                                                                                {# </div> #}

                                                                                </div>
                                                                                {% if entity.imageDesktop is null and 'data.imageDesktop' in errors %}
                                                                                    <p class="imageDesktop error help-block">
                                                                                        <span class="label label-important">
                                                                                            Por favor, selecione uma imagem com largura mínima de 1024px.
                                                                                        </span>
                                                                                    </p>
                                                                                {% endif %}
                                                                            </div>

                                                                        </div>

                                                                        {% if(uploadError) %}
                                                                            <div class="row uploadError">
                                                                                <div class="span12">
                                                                                    <p>
                                                                                        {{ uploadError }}
                                                                                    </p>
                                                                                </div>
                                                                            </div>
                                                                        {% endif %}
                                                                    </div>
                                                                {# </div> #}
                                                            {# </div> #}


                                                        <div class="form-actions right">
                                                            {% if (step == 'pre') %}
                                                                <a
                                                                href="{{ path('campaign_step_choosing_media', { id: campaign.id, step: 'pre-login', action: app.request.get('action') }) }}">
                                                            {% else %}
                                                                    <a href="{{ path('campaign_step_choosing_media', { id: campaign.id, step: 'pos-login', action: app.request.get('action') }) }}">
                                                            {% endif %}
                                                                    <button type="button" class="btn btn-icon btn-default glyphicons circle_remove">
                                                                        <i></i>
                                                                        Cancelar
                                                                    </button>
                                                                </a>
                                                                {{ form_widget(form.submit) }}
                                                            </div>
                                                            </div>
                                                        </div>

                                                        {{ form_end(form) }}
                                                    </div>
                                                    </div>

                                                    {% endblock %}

{% block javascript %}
    {{ parent() }}
    <script src="{{ asset('bundles/admin/theme/scripts/plugins/forms/maskedinput/jquery.maskedinput.js') }}"></script>
    <script src="{{ asset('bundles/admin/theme/scripts/plugins/lightbox/lightbox.js') }}"></script>
    <script type="text/javascript" src="{{ asset('bundles/admin/theme/scripts/plugins/forms/bootstrap-fileinput/bootstrap-fileinput.js') }}"></script>
    <script type="text/javascript" src="{{ asset('bundles/admin/theme/scripts/demo/custom_upload.js') }}"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.6.2/cropper.js" integrity="sha512-lR8d1BXfYQuiqoM/LeGFVtxFyspzWFTZNyYIiE5O2CcAGtTCRRUMLloxATRuLz8EmR2fYqdXYlrGh+D6TVGp3g==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script src="https://code.jquery.com/ui/1.13.2/jquery-ui.min.js"></script>

    <script type="text/javascript">




        var cropper;
        var minZoom = 1; // Mínimo zoom
        var maxZoom = 4; // Máximo zoom

        var cropperDesktop;
        var minZoomDesktop = 1; // Mínimo zoom
        var maxZoomDesktop = 4; // Máximo zoom

jQuery(document).ready(function() {





// === Cropper MOBILE==========================================================
    var $imageCropper = $('#mobilePreviewImage');


    $('#previewModalFinal').modal('hide');
    $('#previewModalFinalDesktop').modal('hide');



    



    // function initializeCropper() {
    //     if (cropper) {
    //         cropper.destroy(); // Destrua o cropper existente se houver
    //     }
    //     var $dataZoom = $('#dataZoom');


    //     cropper = new Cropper($imageCropper[0], {
    //         {# aspectRatio: 9/16, #}
    //         aspectRatio: NaN, // Remove a restrição de proporção
    //         autoCropArea: 1,
    //         cropBoxResizable: true,
    //         dragMode: 'move',
    //         viewMode: '2',
    //         restore: false,
    //         guides: false,
    //         center: true, // Centraliza a imagem
    //         highlight: true,
    //         cropBoxMovable: true,
    //         toggleDragModeOnDblclick: false,
    //         preview: '.img-thumbnail',
    //         zoom: function(e){
    //             var ratio = Math.round(event.detail.ratio * 100) / 10;
    //             if(ratio == 1){
    //                 ratio = 0
    //             }

    //         },
    //         cropstart: function(event) {
    //             // Apenas altera o texto se o cropper foi interagido
    //             isInteracting = true;
    //         },
    //         cropend: function(event) {
    //             updateButtonText();
    //         }

    //     });




    // }
     
    // function updateButtonText() {
    //     // Não atualiza o texto se a interação ainda não começou
    // if (!isInteracting) {
    //     return;
    // }
    // var submitButton = document.getElementById('imageMobileSubmit');

    //     submitButton.innerHTML = '<i></i>Cortar e Enviar';
    //     console.log("cortar tbm");
    // }


    // // Slider de zoom
    // $('#zoom-slider').slider({
    // min: 0.1,
    // max: 4,
    // value: 1,
    // step: 0.01,
    // slide: function( event, ui ) {
    //     if (cropper) {
    //         cropper.zoomTo(ui.value); // Usa o método zoomTo diretamente no objeto cropper
    //     } else {
    //         console.log('Cropper instance not found');
    //     }
    // }
    // });






    // // Configuração inicial do Cropper ao carregar a imagem
    // $('#mobilePreviewImage').on('load', function() {
    //     initializeCropper();
    // }).trigger('load');

    // // Desabilitar o scroll do mouse na área de recorte
    // $('#cropContainer').on('wheel', function(e) {
    //     e.preventDefault(); // Impede o comportamento padrão de scroll
    // });

// === Cropper DESKTOP==========================================================
//     function initializeCropperDesktop() {
//         if (cropperDesktop) {
//             cropperDesktop.destroy(); // Destrua o cropper existente se houver
//         }
//         var $dataZoomDesktop = $('#dataZoomDesktop');

//         cropperDesktop = new Cropper(document.getElementById('desktopPreviewImage'), {
//             {# aspectRatio: 16/9, #}
//             aspectRatio: NaN, // Remove a restrição de proporção
//             viewMode: '2',
//             dragMode: 'move',
//             autoCropArea: 1,
//             restore: false,
//             guides: false,
//             center: true, // Centraliza a imagem
//             highlight: true,
//             cropBoxMovable: true,
//             cropBoxResizable: true,
//             toggleDragModeOnDblclick: false,
//             zoom: function(e){
//                 var ratioDesktop = Math.round(event.detail.ratio * 100) / 10;
//                 console.log('ratioDesktop',ratioDesktop)
//                 if(ratioDesktop == 1){
//                    ratioDesktop = 0
//                 }

//             },
//             cropstart: function(event) {
//                 // Apenas altera o texto se o cropper foi interagido
//                 isInteractingDesktop = true;
//             },
//             cropend: function(event) {
//                 updateButtonTextDesktop();
//             }

//         });

//     }

//     function updateButtonTextDesktop() {
//         // Não atualiza o texto se a interação ainda não começou
//     if (!isInteractingDesktop) {
//         return;
//     }
//     var submitButton = document.getElementById('imageDesktopSubmit');

//         submitButton.innerHTML = '<i></i>Cortar e Enviar';
//         console.log("cortar tbm");
//     }

    

//     // Slider de zoom
//     $('#zoom-sliderDesktop').slider({
//     min: 0.1,
//     max: 4,
//     value: 1,
//     step: 0.01,
//     slide: function( event, ui ) {
//         if (cropperDesktop) {
//             cropperDesktop.zoomTo(ui.value); // Usa o método zoomTo diretamente no objeto cropper
//         } else {
//             console.log('cropperDesktop instance not found');
//         }
//     }
//     });


//     $('input').keypress(function(e) {
//         var code = e.keyCode ? e.keyCode : e.which;
//         return (code == 13) ? false : true;
//     });

//     jQuery('#imageDesktop').on('change', function(e) {
//         $("#imageDesktopSubmit").show();
//         $("#imageDesktopError").hide();

//         var file = e.target.files[0];
//         var type = file.type;
//         var size = (file.size / 1024 / 1024).toFixed(2);

//         if (type !== "image/jpeg" && type !== "image/png") {
//             customDesktopImageUploadError("O tipo mime do arquivo é inválido (\"" + type + "\"). Os tipos mime permitidos são \"image/jpeg\" ou \"image/png\".");
//         } else if (size > 4) {
//             customDesktopImageUploadError("O arquivo é muito grande (" + size + " MB). O tamanho máximo permitido é de 4 MB.");
//         } else {
//        // Mostrar o modal e a pré-visualização
//         var readerD = new FileReader();
//         readerD.onload = function(e) {
//             var imageSrcD = e.target.result;
//             $('#desktopPreviewImage').attr('src', imageSrcD);
//             $('#imageModalDesktop').show();

//             setTimeout(function() {
//                 $('#desktopPreviewImage').on('load', function() {
//                     initializeCropperDesktop();
//                 }).each(function() {
//                     if (this.complete) {
//                         $(this).trigger('load');
//                     }
//                 });
//             }, 500);  // Ajuste o tempo conforme necessário
//         };
//         readerD.readAsDataURL(file);
//     }
// });
//         {# console.log('Tentando inicializar CropperDesktop'); #}
//         $('#desktopPreviewImage').on('load', function() {
//             {# console.log('Imagem carregada, inicializando CropperDesktop'); #}
//             // initializeCropperDesktop();
//         }).trigger('load');
//         {# console.log('Trigger de load disparado'); #}
//     // });




    // Desabilitar o scroll do mouse na área de recorte
    $('#cropContainerDesktop').on('wheel', function(e) {
        e.preventDefault(); // Impede o comportamento padrão de scroll
    });

    // Fechar o modal Desktop
    $('.closeDesktop').on('click', function() {
        $('#imageModalDesktop').hide();
    });

    function customDesktopImageUploadError(message) {
        $('#imageDesktopError').show();
        $('#imageDesktopError span.label-warning').text(message);
        $("#imageDesktopSubmit").hide();
    }

    // jQuery('#imageMobile').on('change', function(e) {
    //     $("#imageMobileSubmit").show();
    //     $("#imageMobileError").hide();

    //     var file = e.target.files[0];
    //     var type = file.type;
    //     var size = (file.size / 1024 / 1024).toFixed(2);

    //     if (type !== "image/jpeg" && type !== "image/png") {
    //         customMobileImageUploadError("O tipo mime do arquivo é inválido (\"" + type + "\"). Os tipos mime permitidos são \"image/jpeg\" ou \"image/png\".");
    //     } else if (size > 4) {
    //         customMobileImageUploadError("O arquivo é muito grande (" + size + " MB). O tamanho máximo permitido é de 4 MB.");
    //     } else {
    //         // Mostrar o modal
    //         var reader = new FileReader();
    //         reader.onload = function(e) {
    //             var imageSrc = e.target.result;
    //             $('#mobilePreviewImage').attr('src', imageSrc);
    //             $('#imageModal').show();
    //         };
    //         reader.readAsDataURL(file);
    //     }
    // });

    function customMobileImageUploadError(message) {
        $('#imageMobileError').show();
        $('#imageMobileError span.label-warning').text(message);
    }

    // Fechar o modal Mobile
    // $('.closeMobile').on('click', function() {
    //     $('#modal-enviar-imagem').hide();
    // });


        $(document).ready(function() {
            $('#icon-container-mobile #mobileicon').css('color', '#000'); // Cor preta para o ícone mobile
            $('#icon-container-desktop #desktopicon').css('color', '#000'); // Cor preta para o ícone desktop

            // PREVIEW MOBILE
            $('#icon-container-mobile #mobileicon').on('click', function() {
                $('#carousel-inner').css({
                    'width': '35%', // Dimensões para simular a tela do celular
                    'height': '55vh',
                    'background-color': '#333', // Cor de fundo do celular
                    'border-radius': '30px',
                    'padding': '15px',
                    'margin': '0 auto'

                });

                    $('#icon-container-mobile #mobileicon').css('color', '#000'); // Cor preta para o ícone mobilef
                    $('#icon-container-mobile #desktopicon').css('color', '#cccccc'); // Cor cinza para o ícone desktop
                });

            $('#icon-container-mobile #desktopicon').on('click', function() {
                $('#carousel-inner').css({
                    'width': '80%', // Ajuste a largura para simular a tela de um notebook
                    'height': '35vh', // Ajuste a altura conforme necessário
                    'background-color': '#333', // Cor de fundo do notebook
                    'border-radius': '15px', // Cantos arredondados do notebook
                    'padding': '20px', // Ajuste o padding se necessário
                    'max-width':'80%',
                    'margin': '3vw auto'
                });

                $('#icon-container-mobile #desktopicon').css('color', '#000'); // Cor preta para o ícone desktop
                $('#icon-container-mobile #mobileicon').css('color', '#cccccc'); // Cor cinza para o ícone mobile
            });


            // PREVIEW desktop

            $('#icon-container-desktop #mobileicon').on('click', function() {

                $('#carousel-inner-desktop').css({
                    'width': '35%', // Ajuste a largura para simular a tela de um notebook
                    'height': '55vh',
                    'background-color': '#333', // Cor de fundo do celular
                    'border-radius': '30px',
                    'padding': '15px'
                });

                    $('#icon-container-desktop #mobileicon').css('color', '#000'); // Cor preta para o ícone mobile
                    $('#icon-container-desktop #desktopicon').css('color', '#cccccc'); // Cor cinza para o ícone desktop
                });

            $('#icon-container-desktop #desktopicon').on('click', function() {

                $('#carousel-inner-desktop').css({
                    'width': '80%', // Ajuste a largura para simular a tela de um notebook
                    'height': '35vh', // Ajuste a altura conforme necessário
                    'background-color': '#333', // Cor de fundo do notebook
                    'border-radius': '15px', // Cantos arredondados do notebook
                    'padding': '20px', // Ajuste o padding se necessário
                    'max-width':'80%'
                });

                $('#icon-container-desktop #desktopicon').css('color', '#000'); // Cor preta para o ícone desktop
                $('#icon-container-desktop #mobileicon').css('color', '#cccccc'); // Cor cinza para o ícone mobile
            });



        });











    // Botão preview visualizar a imagem MOBILE
    $('#previewButtonFinal').on('click', function() {
        cropper.getCroppedCanvas().toBlob(function(blob) {
            // Cria uma URL para o Blob
            var url = URL.createObjectURL(blob);

            // Atualiza o preview com o URL
            $('#previewImageFinal').attr('src', url);

            // Mostra o modal de pré-visualização final
            $('#previewModalFinal').modal('show');

        });
    });

    // Botão preview visualizar a imagem DESKTOP
    $('#previewButtonFinalDesktop').on('click', function() {
        cropperDesktop.getCroppedCanvas().toBlob(function(blob) {
            // Cria uma URL para o Blob
            var urlD = URL.createObjectURL(blob);

            // Atualiza o preview com o URL
            $('#previewImageFinalDesktop').attr('src', urlD);

            // Mostra o modal de pré-visualização final
            $('#previewModalFinalDesktop').modal('show');
        });
    });

    var imgDesktop = '{{ medias.imageDesktop }}';
    var imgMobile  = '{{ medias.imageMobile }}';

    customScripts.init();
});


        // $(document).ready(function() {
        //     $('#icon-container-mobile #mobileicon').css('color', '#000'); // Cor preta para o ícone mobile
        //     $('#icon-container-desktop #desktopicon').css('color', '#000'); // Cor preta para o ícone mobile

        //     // PREVIEW MOBILE
        //     $('#icon-container-mobile #mobileicon').on('click', function() {
        //         $('#mockup-container').css({
        //             'width': '35%', // Dimensões para simular a tela do celular
        //             'height': '55vh',
        //             'background-color': '#333', // Cor de fundo do celular
        //             'border-radius': '30px',
        //             'padding': '15px'
        //         });

        //             $('#icon-container-mobile #mobileicon').css('color', '#000'); // Cor preta para o ícone mobile
        //             $('#icon-container-mobile #desktopicon').css('color', '#cccccc'); // Cor cinza para o ícone desktop
        //         });

        //     $('#icon-container-mobile #desktopicon').on('click', function() {
        //         $('#mockup-container').css({
        //             'width': '80%', // Ajuste a largura para simular a tela de um notebook
        //             'height': '35vh', // Ajuste a altura conforme necessário
        //             'background-color': '#333', // Cor de fundo do notebook
        //             'border-radius': '15px', // Cantos arredondados do notebook
        //             'padding': '20px', // Ajuste o padding se necessário
        //             'max-width':'80%'
        //         });

        //         $('#icon-container-mobile #desktopicon').css('color', '#000'); // Cor preta para o ícone desktop
        //         $('#icon-container-mobile #mobileicon').css('color', '#cccccc'); // Cor cinza para o ícone mobile
        //     });


        //     // PREVIEW desktop

        //     $('#icon-container-desktop #mobileicon').on('click', function() {
        //         console.log('cliquei icone mobile')

        //         $('.carousel-inner.my-carousel').css({
        //             'width': '35%', // Ajuste a largura para simular a tela de um notebook
        //             'height': '55vh',
        //             'background-color': '#333', // Cor de fundo do celular
        //             'border-radius': '30px',
        //             'padding': '15px'
        //         });

        //             $('#icon-container-desktop #mobileicon').css('color', '#000'); // Cor preta para o ícone mobile
        //             $('#icon-container-desktop #desktopicon').css('color', '#cccccc'); // Cor cinza para o ícone desktop
        //         });

        //     $('#icon-container-desktop #desktopicon').on('click', function() {
        //         console.log('cliquei icone desktop')
        //         $('.carousel-inner.my-carousel').css({
        //             'width': '80%', // Ajuste a largura para simular a tela de um notebook
        //             'height': '35vh', // Ajuste a altura conforme necessário
        //             'background-color': '#333', // Cor de fundo do notebook
        //             'border-radius': '15px', // Cantos arredondados do notebook
        //             'padding': '20px', // Ajuste o padding se necessário
        //             'max-width':'80%'
        //         });

        //         $('#icon-container-desktop #desktopicon').css('color', '#000'); // Cor preta para o ícone desktop
        //         $('#icon-container-desktop #mobileicon').css('color', '#cccccc'); // Cor cinza para o ícone mobile
        //     });


// 
        // });






    
    function handleCheckboxChange() {
        var checkbox = document.querySelector('.custom-checkbox-input');
        var section = document.getElementById('desktopBannerSection');
        var obs = document.getElementById('obs');
        if (checkbox.checked) {
            section.style.display = 'block'; // Mostra a seção
            obs.style.display = 'none';
        } else {
            section.style.display = 'none'; // Esconde a seção
            obs.style.display = 'block';

        }

    }
document.addEventListener('DOMContentLoaded', function() {
    var forms = document.querySelectorAll('form');

    forms.forEach(function(form) {
        form.addEventListener('submit', function(event) {
            event.preventDefault();

            var formData = new FormData(form);

            // Exibir detalhes dos arquivos no console
            // formData.forEach(function(value, key) {
            //     if (value instanceof File) {
            //         console.log(key + ': ' + value.name + ' (' + value.size + ' bytes)');
            //     } else {
            //         console.log(key + ': ' + value);
            //     }
            // });

            // console.log('Formulário está prestes a ser enviado!');

            var message = document.getElementById('submission-message');
            message.style.display = 'block';

            var delay = 3000; // 3 segundos

            setTimeout(function() {
                message.style.display = 'none'; // Remove a mensagem da tela
                form.submit(); // Envia o formulário
            }, delay);
        });
    });
});





</script>
                {% endblock %}
